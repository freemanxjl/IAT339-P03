{"version":3,"sources":["special/Routes.js","components/MainNavbar.js","special/Hook.js","App.js","reportWebVitals.js","index.js"],"names":["Home","lazy","ProjectOne","ProjectTwo","StyleGuide","About","Contact","NotFound","Routes","exact","path","component","checkActive","match","location","pathname","MainNavbar","props","useState","expanded","setExpanded","Navbar","fixed","collapseOnSelect","expand","Brand","className","to","Toggle","aria-controls","onClick","Collapse","id","Nav","activeClassName","isActive","ScrollToTop","useLocation","useEffect","window","scrollTo","App","Helmet","Container","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAGMA,EAAOC,gBAAK,kBAAM,sDAClBC,EAAaD,gBAAK,kBAAM,6DACxBE,EAAaF,gBAAK,kBAAM,8DACxBG,EAAaH,gBAAK,kBAAM,6DACxBI,EAAQJ,gBAAK,kBAAM,sDACnBK,EAAUL,gBAAK,kBAAM,sDACrBM,EAAWN,gBAAK,kBAAM,iCAgBbO,MAdf,WACI,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjC,cAAC,IAAD,CAAOU,KAAK,mBAAmBC,UAAWT,IAC1C,cAAC,IAAD,CAAOQ,KAAK,WAAWC,UAAWR,IAClC,cAAC,IAAD,CAAOO,KAAK,SAASC,UAAWN,IAChC,cAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWL,IAClC,cAAC,IAAD,CAAOI,KAAK,eAAeC,UAAWP,IACtC,cAAC,IAAD,CAAOO,UAAWJ,Q,wBCVxBK,EAAc,SAACC,EAAOC,GAE1B,QAAIA,GAEgB,MADDA,EAAZC,UA8BMC,MA1Bf,SAAoBC,GAAQ,IAAD,EACOC,oBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,KAGzB,OACI,8BACE,eAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,kBAAgB,EAACC,OAAO,KAAKL,SAAUA,EAA3D,UACE,cAACE,EAAA,EAAOI,MAAR,UACE,cAAC,IAAD,CAAMC,UAAU,uBAAuBC,GAAG,IAA1C,2BAIF,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,wBAAwBC,QAAS,kBAAMV,GAAYD,GAAmB,eACnG,eAACE,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,UACE,qBAAKN,UAAU,YACf,eAACO,EAAA,EAAD,WACA,cAAC,IAAD,CAASP,UAAU,4BAA4BQ,gBAAgB,YAAYP,GAAG,eAAeG,QAAS,kBAAMV,GAAY,IAAxH,yBACA,cAAC,IAAD,CAASM,UAAU,4BAA4BQ,gBAAgB,YAAYP,GAAG,WAAWG,QAAS,kBAAMV,GAAY,IAApH,qBACA,cAAC,IAAD,CAASM,UAAU,4BAA4BQ,gBAAgB,YAAYP,GAAG,SAASG,QAAS,kBAAMV,GAAY,IAAlH,mBACA,cAAC,IAAD,CAASM,UAAU,4BAA4BQ,gBAAgB,YAAYC,SAAUvB,EAAae,GAAG,IAAIG,QAAS,kBAAMV,GAAY,IAApI,mC,YC7BG,SAASgB,IAAe,IAC7BrB,EAAasB,cAAbtB,SAMR,OAJAuB,qBAAU,WACRC,OAAOC,SAAS,EAAG,KAClB,CAACzB,IAEG,KCiBM0B,MAjBf,WACE,OACE,sBAAKT,GAAG,YAAR,UACE,cAACU,EAAA,EAAD,UACE,kDAEF,eAAC,IAAD,WACE,cAACN,EAAD,IACA,cAAC,EAAD,IACA,cAACO,EAAA,EAAD,UACE,qBAAKX,GAAG,eAAR,SAAuB,cAAC,WAAD,CAAUY,SAAU,wBAApB,SAAiC,cAAC,EAAD,iBCXnDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bba1952.chunk.js","sourcesContent":["import React, {lazy} from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nconst Home = lazy(() => import('../pages/Home'));\r\nconst ProjectOne = lazy(() => import('../pages/ProjectOne'));\r\nconst ProjectTwo = lazy(() => import('../pages/ProjectTwo'));\r\nconst StyleGuide = lazy(() => import('../pages/StyleGuide'));\r\nconst About = lazy(() => import('../pages/About'));\r\nconst Contact = lazy(() => import('../pages/Contact'));\r\nconst NotFound = lazy(() => import('../pages/NotFound'));\r\n\r\nfunction Routes(){\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/grandis-library\" component={ProjectOne}/>\r\n            <Route path=\"/tamooki\" component={ProjectTwo}/>\r\n            <Route path=\"/about\" component={About}/>\r\n            <Route path=\"/contact\" component={Contact}/>\r\n            <Route path=\"/style-guide\" component={StyleGuide}/>\r\n            <Route component={NotFound}/>\r\n        </Switch>\r\n    )\r\n};\r\n\r\nexport default Routes;","import React, { useState } from 'react';\r\n// import logo from '../logo.png';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n/*\r\n    Main navbar component for our site\r\n    Created by: Ikasuu, Fall 2020\r\n*/\r\n\r\n//Check if homepage for NavLink use, else we will always have an underline under 'Home'\r\nconst checkActive = (match, location) => {\r\n  //some additional logic to verify you are in the home URI\r\n  if(!location) return false;\r\n  const {pathname} = location;\r\n  return pathname === \"/\";\r\n}\r\n\r\nfunction MainNavbar(props) {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n      <div>\r\n        <Navbar fixed=\"top\" collapseOnSelect expand=\"lg\" expanded={expanded}>\r\n          <Navbar.Brand>\r\n            <Link className=\"site-title nav-props\" to=\"/\">\r\n              FREEMAN LIU\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" onClick={() => setExpanded(expanded ? false : \"expanded\")}/>\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <div className=\"mr-auto\"/>\r\n            <Nav>\r\n            <NavLink className=\"nav-link-button nav-props\" activeClassName=\"underline\" to=\"/style-guide\" onClick={() => setExpanded(false)}>Style Guide</NavLink>\r\n            <NavLink className=\"nav-link-button nav-props\" activeClassName=\"underline\" to=\"/contact\" onClick={() => setExpanded(false)}>Contact</NavLink>\r\n            <NavLink className=\"nav-link-button nav-props\" activeClassName=\"underline\" to=\"/about\" onClick={() => setExpanded(false)}>About</NavLink>\r\n            <NavLink className=\"nav-link-button nav-props\" activeClassName=\"underline\" isActive={checkActive} to=\"/\" onClick={() => setExpanded(false)}>Portfolio</NavLink>\r\n            </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MainNavbar;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// Special component used to make it so we always scroll to top\r\n// of page rather than it stays scrolled down even when we navigate out\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import { Suspense } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\n// import logo from './logo.svg';\nimport Routes from './special/Routes';\nimport MainNavbar from './components/MainNavbar';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/index.scss';\nimport ScrollToTop from './special/Hook';\n\nfunction App() {\n  return (\n    <div id=\"container\">\n      <Helmet>\n        <title>Freeman Liu</title>\n      </Helmet>\n      <Router>\n        <ScrollToTop/>\n        <MainNavbar/>\n        <Container>\n          <div id=\"main-content\"><Suspense fallback={<div></div>}><Routes/></Suspense></div>\n        </Container>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}